@model IEnumerable<PersonResponse>

@{
    ViewBag.Title = "Persons";
}
<form action="~/persons/index" method="get">
    <h1>Persons</h1>

    <a href="~/persons/create">Create Person</a>

    <div class="box flex">
        <div class="flex-1">
            <select class="form-input" name="searchBy">

                @foreach (var field in ViewBag.SearchFields)
                {

                    if (field.Key == ViewBag.currentSearchBy)
                    {
                        <option value="@field.Key" selected>@field.Value</option>
                    }
                    else
                    {
                        <option value="@field.Key">@field.Value</option>
                    }

                }

            </select>
        </div>

        <div class="flex-1">
            <input type="search" id="Search" class="form-input" placeholder="Search" name="searchString"
                value="@ViewBag.currentSearchString">
        </div>


        <div class="flex-1">
            <button class="button button-blie-back">Search</button>
            <a href="~/persons/index" class="link-hocer">Clear all</a>
        </div>


    </div>
    <table class="table w-100 mt">
        <thead>
            <tr>
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                {"ColumnName", nameof(PersonResponse.PersonName) },
                {"DisplayName", "Person Name" }
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                {"ColumnName", nameof(PersonResponse.Email) },
                {"DisplayName", "Email" }
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                {"ColumnName", nameof(PersonResponse.DateOfBirth) },
                {"DisplayName", "Date of birth" }
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                {"ColumnName", nameof(PersonResponse.Age) },
                {"DisplayName", "Age" }
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                {"ColumnName", nameof(PersonResponse.Gender) },
                {"DisplayName", "Gender" }
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                {"ColumnName", nameof(PersonResponse.Country) },
                {"DisplayName", "Country" }
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                {"ColumnName", nameof(PersonResponse.Address) },
                {"DisplayName", "Address" }
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData) {
                {"ColumnName", nameof(PersonResponse.ReceiveNewsLetters) },
                {"DisplayName", "Receive news letters" }
                })



            </tr>
        </thead>
        <tbody>
            @foreach (PersonResponse person in Model)
            {
                <tr>
                    <td style="width: 15%">@person.PersonName</td>
                    <td style="width: 20%">@person.Email</td>
                    <td style="width: 13%">@person.DateOfBirth?.ToString("dd MM yyyy")</td>
                    <td style="width: 9%">@person.Age</td>
                    <td style="width: 10%">@person.Gender</td>
                    <td style="width: 10%">@person.Country</td>
                    <td style="width: 20%">@person.Address</td>
                    <td style="width: 15%">@(person.ReceiveNewsLetters ? "Yes" : "No")</td>
                </tr>
            }
        </tbody>
    </table>
</form>